cstr_reserve_cpy, cstr_delete, cstr_free, cstr_free_high 函数文档

函数名：cstr_reserve_cpy

功能描述：
此函数用于将一个c_string的内容复制到另一个c_string的指定位置，并在必要时重新分配内存以容纳新的内容。

参数：

s：指向目标c_string的指针，用于存储复制后的内容。
start：size_t类型，表示在目标c_string中开始插入新内容的位置。
a：指向源c_string的指针，包含要复制的内容。
返回值：

如果内存重新分配失败，返回true。
如果操作成功，返回false。
函数名：cstr_delete

功能描述：
此函数用于从c_string中删除指定位置和长度的内容。

参数：

s：指向c_string的指针，用于删除内容。
start：size_t类型，表示开始删除的位置。
length：size_t类型，表示要删除的内容的长度。
返回值：

如果给定的位置或长度无效，返回true。
如果操作成功，返回false。
函数名：cstr_free

功能描述：
此函数用于释放c_string的内存。

参数：

s：指向要释放内存的c_string的指针。
返回值：
无返回值。

函数名：cstr_free_high

功能描述：
此函数用于释放多个c_string的内存。

参数：

size：size_t类型，表示要释放的c_string的数量。
...：可变参数列表，包含要释放的c_string的指针。
返回值：
无返回值。

注意事项：

cstr_reserve_cpy函数在必要时会重新分配目标c_string的内存，因此请确保目标c_string的指针是有效的，并且有足够的内存可供分配。
cstr_delete函数在删除内容后，会将剩余的内容向左移动以填补空白，并在末尾添加空字符(\0)。
cstr_free函数仅释放c_string的数据部分的内存，不会释放c_string结构体本身的内存。
cstr_free_high函数使用可变参数列表来接收多个c_string的指针，因此在调用时需要提供正确数量的指针，并且确保每个指针都是有效的。